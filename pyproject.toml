[tool.poetry]
name = "netmikro"
version = "0.1.0"
description = "Netmikro is a simple library that provides an easy way to manage Mikrotik routers, simplifying configuration and monitoring tasks."
authors = ["Henrique Sebasti√£o <contato@henriquesebastiao.com>"]
readme = "README.md"
packages = [{include = "netmikro"}]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Telecommunications Industry",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: System :: Networking :: Firewalls",
    "Topic :: System :: Networking",
    "Topic :: System :: Networking :: Monitoring :: Hardware Watchdog",
    "Topic :: Utilities",
]

[tool.poetry.urls]
"Documentation" = "https://netmikro.henriquesebastiao.com"
"Homepage" = "https://netmikro.henriquesebastiao.com"
"Repository" = "https://github.com/henriquesebastiao/netmikro"
"Bug Tracker" = "https://github.com/henriquesebastiao/netmikro/issues"

[tool.poetry.dependencies]
python = "^3.11"
netmiko = "^4.4.0"
python-dotenv = "^1.0.1"
pydantic = "^2.8.2"

[tool.poetry.group.dev.dependencies]
pytest-cov = ">=4.1,<6.0"
taskipy = "^1.13.0"
coverage-badge = "^1.1.2"
setuptools = ">=69.5.1,<76.0.0"
pytest = "^8.3.2"
bandit = {extras = ["toml"], version = "^1.7.9"}
radon = {extras = ["toml"], version = "^6.0.1"}
ruff = "^0.6.2"

[tool.poetry.group.doc.dependencies]
mkdocs-material = "^9.2.8"
mkdocstrings = ">=0.23,<0.27"
mkdocstrings-python = "^1.6.2"
mkdocs-macros-plugin = "^1.0.5"
jinja2 = "^3.1.3"
pygments = "^2.17.2"
pymdown-extensions = "^10.7"
mkdocs-git-committers-plugin-2 = "^2.2.3"
mkdocs-git-authors-plugin = ">=0.7.2,<0.10.0"
mkdocs-git-revision-date-localized-plugin = "^1.2.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = "."

[tool.coverage.run]
source = [
    "netmikro",
]
omit = [
    "/tests/*",
]

[tool.ruff]
line-length = 79
extend-exclude = ['']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT', 'D', 'UP']
ignore = ['D100', 'D104', 'D105', 'D107', 'E501', 'PLR0914']

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F403", "F401"]
"tests/*" = ["F401", "F811", "D"]
"validators.py" = ["D"]

[tool.taskipy.tasks]
mypy = "mypy -p netmikro"
radon = "radon cc ./netmikro -a -na"
bandit = "bandit -r ./netmikro"
lint = "ruff check .; ruff check . --diff"
format = 'ruff format .; ruff check . --fix'
doc = "mkdocs serve"
badge = "coverage-badge -o docs/assets/coverage.svg -f"
pre_test = "task lint"
test = "pytest -s -x --cov=netmikro -vv"
post_test = "coverage html"
export-requirements-doc = "poetry export -f requirements.txt --output docs/requirements.txt --without-hashes --only doc"
